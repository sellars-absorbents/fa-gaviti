name: Deploy Python Azure Functions (zip)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: .
  PYTHON_VERSION: '3.12'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4

      # Optional: keep this only if you run tests/linters
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      # Optional: run tests here

      - name: Zip artifact
        run: |
          zip -r release.zip . \
            -x "venv/*" ".venv/*" ".git/*" ".github/*" "__pycache__/*" "*.pyc"

      - uses: actions/upload-artifact@v4
        with:
          name: function-zip
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: function-zip

      - run: unzip release.zip

      - name: Azure login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_EB974A9663B84596BD1F64B1FF7C01BA }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_8E82F0EE22484B6B9D6356375C7104ED }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_DA79674312E248B9BAF7DD56A6AFCD0B }}

      - name: 'Deploy to Azure Functions'
        uses: Azure/functions-action@v1
        id: deploy-to-function
        with:
          app-name: 'fa-gaviti'
          slot-name: 'Production'
          package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
          enable-oryx-build: true
          scm-do-build-during-deployment: true

 
