name: Deploy Python Azure Functions (zip, RBAC only)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: .
  PYTHON_VERSION: '3.12'
  AZURE_SUBSCRIPTION_ID: '07fa5c8a-e372-40c1-8794-4c29e70fd46e'
  AZURE_RESOURCE_GROUP: 'rg-gaviti-prod'
  AZURE_FUNCTIONAPP_NAME: 'fa-gaviti'
  STORAGE_ACCOUNT_NAME: 'samstgprod001'   # used by optional appsettings step

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies into .python_packages
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt -t .python_packages/lib/site-packages
          python - << 'PY'
          import importlib.util as u
          print("requests in build?", u.find_spec("requests") is not None)
          PY

      - name: Zip artifact
        run: |
          zip -r release.zip . \
            -x "venv/*" ".venv/*" ".git/*" ".github/*" "__pycache__/*" "*.pyc" "env/*"

      - uses: actions/upload-artifact@v4
        with:
          name: function-zip
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: function-zip

      - name: Azure login (Service Principal secret)
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Functions (zip deploy, no Oryx)
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
          package: 'release.zip'
          enable-oryx-build: false
          scm-do-build-during-deployment: false

      # Optional: set MI-based storage app setting (do once or keep here)
      - name: Configure MI-based storage setting
        uses: azure/cli@v2
        with:
          inlineScript: |
            az functionapp config appsettings set \
              -g "${{ env.AZURE_RESOURCE_GROUP }}" -n "${{ env.AZURE_FUNCTIONAPP_NAME }}" \
              --settings AzureWebJobsStorage__accountName="${{ env.STORAGE_ACCOUNT_NAME }}"
            # Uncomment to remove old connection string if still present:
            # az functionapp config appsettings delete \
            #   -g "${{ env.AZURE_RESOURCE_GROUP }}" -n "${{ env.AZURE_FUNCTIONAPP_NAME }}" \
            #   --setting-names AzureWebJobsStorage

      - name: Restart Function App
        uses: azure/cli@v2
        with:
          inlineScript: |
            az functionapp restart -g "${{ env.AZURE_RESOURCE_GROUP }}" -n "${{ env.AZURE_FUNCTIONAPP_NAME }}"
